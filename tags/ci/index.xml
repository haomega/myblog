<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CI on 小豪小豪</title><link>https://haomega.github.io/myblog/tags/ci/</link><description>Recent content in CI on 小豪小豪</description><generator>Hugo -- gohugo.io</generator><language>zh-hans</language><lastBuildDate>Mon, 03 Aug 2020 22:02:15 +0800</lastBuildDate><atom:link href="https://haomega.github.io/myblog/tags/ci/index.xml" rel="self" type="application/rss+xml"/><item><title>为你的项目配置代码风格审查CheckStyle与CI测试</title><link>https://haomega.github.io/myblog/posts/%E4%B8%BA%E4%BD%A0%E7%9A%84%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E5%AE%A1%E6%9F%A5ci/</link><pubDate>Mon, 03 Aug 2020 22:02:15 +0800</pubDate><guid>https://haomega.github.io/myblog/posts/%E4%B8%BA%E4%BD%A0%E7%9A%84%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E5%AE%A1%E6%9F%A5ci/</guid><description>why？ 多人协作项目中，每个人的代码风格习惯可能不一样，而且有一些写法容易造成歧义， 比如if后不加花括号。
使用代码风格审查工具可以帮助我们强制要求代码的写法。
使用Maven CheckStyle插件 Maven CheckStyle plugin
审查规则xml 配置例子
POM.xml 中配置插件 &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-checkstyle-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.1.1&amp;lt;/version&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;configLocation&amp;gt;${basedir}/.circleci/checkstyle.xml&amp;lt;/configLocation&amp;gt; &amp;lt;includeTestSourceDirectory&amp;gt;true&amp;lt;/includeTestSourceDirectory&amp;gt; &amp;lt;enableRulesSummary&amp;gt;false&amp;lt;/enableRulesSummary&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;executions&amp;gt; &amp;lt;execution&amp;gt; &amp;lt;id&amp;gt;verify&amp;lt;/id&amp;gt; &amp;lt;phase&amp;gt;verify&amp;lt;/phase&amp;gt; &amp;lt;goals&amp;gt; &amp;lt;goal&amp;gt;check&amp;lt;/goal&amp;gt; &amp;lt;/goals&amp;gt; &amp;lt;/execution&amp;gt; &amp;lt;/executions&amp;gt; &amp;lt;/plugin&amp;gt; configLocation配置文件路径，可以参考上面的例子。
&amp;lt;executions 绑定plugin执行的Maven默认生命周期的阶段，这里是verify
使用CircleCI Circle是一个免费的CI工具。
Maven的代码审查插件，只是与Maven的生命周期进行绑定，我们还需要保证，在项目组成员提交代码（PR）时，对代码风格进行审查（也就是运行 CheckStyle plugin），通过检查才能合并。
在CircleCI上进行配置 登录CircleCI后，可以与Github上的项目进行关联，对我们将要测试的项目生成测试脚本， 会有一个yml配置文件，配置到我们的项目中，类似这样：
version: 2 jobs: test: docker: - image: circleci/openjdk:8u212-jdk-stretch steps: - checkout - restore_cache: key: haomega-{{ checksum &amp;quot;pom.xml&amp;quot; }} - run: name: Run Maven verify command: mvn clean verify - save_cache: # saves the project dependencies paths: - ~/.</description></item></channel></rss>